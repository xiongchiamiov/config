alias ls='ls --color=auto'
#eval `dircolors -b`

alias p='packer'
alias y='packer'

alias ipython='ipython -pydb'
alias cpan='sudo perl -MCPAN -eshell'
alias vim='vim -p'

alias ll="ls -l"
alias la="ls -A"
alias lla="ls -lA"

# I mis-type this one often enough, don't even rely on zsh's correction features.
alias gi=git

# when making directories, cd into them
function mk {
mkdir $1 && cd $1
}
# cd does an ls, too
function cd {
builtin cd $1 && ls
}

# find broken soft links
alias brokenls='find . -type l | (while read FN ; do test -e "$FN" || ls -ld "$FN"; done)'

alias untar="tar xvf"
alias untgz="tar xvzf"
alias untargz="tar xvzf"
alias unbz2="tar xvjf"

alias tgz="tar czvf"
alias targz="tar czvf"

# Unplugging my display undoes this (listed in .xinitrc) for some reason, so I
# need to re-run it when plugging back in.
alias fix-win="setxkbmap -option 'caps:ctrl_modifier,altwin:swap_lalt_lwin'"

function decode-authorization-failure-message {
    if [ $# -ne 1 ] || [ "$1" = -h ] || [ "$1" = --help ]; then
        cat <<'EOT'
Usage: decode-authorization-failure-message <message>

Use this when Amazon gives you an "Encoded authorization failure message" and
you need to turn it into something readable.
EOT
        return 1
    fi

    aws sts decode-authorization-message --encoded-message "$1" |
        jq '.["DecodedMessage"]' |
        sed 's/\\"/"/g' |
        sed 's/^"//' |
        sed 's/"$//' |
        jq
}
